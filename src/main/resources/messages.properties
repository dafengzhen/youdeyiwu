# === section ===
section.name.required = Section name is required.
section.name.size = Section name must be between {min} and {max} characters long.
section.cover.url = Section cover URL must start with HTTP or HTTPS protocol.
section.sort.value = Section sort value must be a positive number.
section.cover.image.format = Section cover image exceeds the size limit of {max} or is not in a supported format ({type}).
section.cover.image.notfound = Section cover image not found.
section.access = Sorry, you are unable to access this section or the section does not exist.

# === section group ===
sectionGroup.name.required = The section group name is required.
sectionGroup.name.size = The section group name must be between {min} and {max} characters in length.
sectionGroup.sort.value = The section group sort value must be a positive number.

# === tag ===
tag.name.required = The tag name is required.
tag.name.size = The tag name must be between {min} and {max} characters in length.
tag.name.duplicate = Sorry, the tag name already exists.
tag.sort.value = The tag sort value must be a positive number.

# === tag group ===
tagGroup.name.required = The tag group name is required.
tagGroup.name.size = The tag group name must be between {min} and {max} characters in length.
tagGroup.sort.value = The tag group sort value must be a positive number.

# === comment ===
comment.content.required = Comment content is required.
comment.content.size = The comment content must be between {min} and {max} characters in length.
comment.postId.required = The post Id for the comment is required.
comment.create.message.name = You have received a new comment.
comment.create.message.overview = From user [ {alias} ] on [ {name} ], the comment says: [ {content} ], posted at: [ {time} ].
comment.create.message.overview.anonymous = On [ {name} ], the comment says: [ {content} ], posted at: [ {time} ] by an anonymous user.

# === reply ===
reply.content.required = Reply content is required.
reply.content.size = The reply content must be between {min} and {max} characters in length.
reply.create.invalid = Sorry, unable to create a reply.
reply.create.message.name = You have received a new reply.
reply.create.message.overview = From user [ {alias} ] on [ {name} ], the reply says: [ {content} ], posted at: [ {time} ].
reply.create.message.overview.anonymous = On [ {name} ], the reply says: [ {content} ], posted at: [ {time} ] by an anonymous user.

# === post review queue ===
postReviewQueue.latestReviewResultTime.required = The estimated completion time for the review is required.
postReviewQueue.postId.required = The post Id for the review is required.
postReviewQueue.latestReviewResultTime.future = The estimated completion time of the review must be in the future.
postReviewQueue.pendingReview = Sorry, you can only claim posts that are currently pending review.
postReviewQueue.whetherToContinue = Sorry, you don't have permission to process the review request for this post.
postReviewQueue.received = Sorry, the review request for this post has already been claimed by another administrator.
postReviewQueue.notBeenPicked = Sorry, the review request for this post has not been claimed by any other administrator yet.
postReviewQueue.receive.message.name = You have received a post review request.
postReviewQueue.receive.message.overview = The post [ {name} ] requires review and you are assigned to handle it. Time of assignment: [ {time} ], estimated completion time: [ {completeTime} ].
postReviewQueue.receive.user.message.name = Your post is under review.
postReviewQueue.receive.user.message.overview = Administrator [ {admin} ] has taken up the review request for your post [ {name} ]. Time of assignment: [ {time} ], estimated completion time: [ {completeTime} ].
postReviewQueue.return.message.name = You have returned a post review request.
postReviewQueue.return.message.overview = The review request for the post [ {name} ] will now be handled by another administrator. Time of return: [ {time} ], reason for return: [ {reason} ].
postReviewQueue.return.user.message.name = Your post is now waiting for review.
postReviewQueue.return.user.message.overview = Administrator [ {admin} ] has returned the review request for your post [ {name} ]. Time of return: [ {time} ], reason for return: [ {reason} ]. Your post will now be reviewed by another administrator.
postReviewQueue.approved.message.name = You have approved the review request for the post.
postReviewQueue.approved.message.overview = You have approved the review request for the post [ {name} ]. The post is now accessible to the public. Approval time: [ {time} ], reason for approval: [ {reason} ].
postReviewQueue.approved.user.message.name = Your post has been approved.
postReviewQueue.approved.user.message.overview = Congratulations! Administrator [ {admin} ] has approved your post [ {name} ] for review. Approval time: [ {time} ], reason for approval: [ {reason} ]. Your post is now open for public access.
postReviewQueue.notApproved.message.name = You have not approved the review request for the post.
postReviewQueue.notApproved.message.overview = You have not approved the review request for the post [ {name} ]. The post is now in a state of revision. Rejection time: [ {time} ], reason for rejection: [ {reason} ].
postReviewQueue.notApproved.user.message.name = Your post did not pass the review.
postReviewQueue.notApproved.user.message.overview = We are sorry to inform you that Administrator [ {admin} ] has marked your post [ {name} ] as not approved. Rejection time: [ {time} ], reason for rejection: [ {reason} ]. Please consider the reasons for rejection and make necessary revisions before resubmitting for review. Thank you for your understanding and support.

# === post ===
post.viewPage.ip.invalid = Invalid IP address. Please provide a valid IP address.
post.name.required = Post name is required.
post.name.size = Post name length should be between {min} and {max}.
post.cover.url = The post cover URL must start with HTTP or HTTPS.
post.contentLink.url = The post content URL must start with HTTP or HTTPS.
post.cover.image.format = The post cover file exceeds the maximum size of {max} or is not in a supported format ({type}).
post.cover.image.notfound = The post cover file could not be found.
post.access = Sorry, you cannot access this post or the post does not exist.
post.access.pendingReview = Sorry, you cannot access this post as it is either pending review or has been rejected.
post.reviewState.approved.user.message.name = Your post has been approved.
post.reviewState.approved.user.message.overview = Congratulations! Your post [ {name} ] has been approved. Approval time: [ {time} ], Approval reason: [ {reason} ]. Your post is now accessible to the public.
post.reviewState.rejected.user.message.name = Your post has been rejected.
post.reviewState.rejected.user.message.overview = Sorry, your post [ {name} ] has been rejected. Rejection time: [ {time} ], Rejection reason: [ {reason} ]. Your post is now restricted from public access.
post.reviewState.pendingReview.user.message.name = Your post is pending review.
post.reviewState.pendingReview.user.message.overview = Your post [ {name} ] is currently pending review. Operation time: [ {time} ]. During the review period, your post will temporarily be unable to be edited.

# === message ===
message.name.required = Message name is required.
message.name.size = Message name length should be between {min} and {max}.
message.overview.required = Message overview is required.
message.overview.size = Message overview length should be between {min} and {max}.
message.sort.value = Message sort value must be a positive number.
message.receiver.required = Message receiver is required.
message.link.url = Message link must start with HTTP or HTTPS.

# === point ===
point.ruleName.required = Point rule name is required.
point.permissionRuleName.required = Point permission rule name is required.
point.permissionRule.anonymous = Sorry, due to the system's point mechanism being enabled, unauthenticated users are unable to access this resource.
point.permissionRule.points = Sorry, you do not have sufficient permissions to access this resource. Required points: [ {requiredPoints} ], Current points: [ {points} ]. Higher points may lead to increased access permissions.
point.pointRule.message.name = Changes in your points
point.pointRule.message.overview = Your points have changed. Increased by [ {increased} ], decreased by [ {decreased} ]. Your remaining points are [ {remaining} ]. The source of the points is [ {source} ].
point.systemService = System Service
point.likePost = Like Post
point.likeComment = Like Comment
point.likeReply = Like Reply
point.commentPost = Comment on Post
point.replyPost = Reply to Post
point.followPost = Follow Post
point.favoritePost = Favorite Post
point.dislikePost = Dislike Post
point.dislikeComment = Dislike Comment
point.dislikeReply = Dislike Reply
point.postApproved = Post Approved
point.postNotApproved = Post Not Approved
point.postPendingReview = Post Pending Review
point.visitPost = Visit Post
point.createPost = Create Post
point.updatePostState = Update Post State
point.updatePost = Update Post
point.updatePostTags = Update Post Tags
point.updatePostContentLink = Update Post Content Link
point.updatePostCoverLink = Update Post Cover Link
point.updatePostSection = Update Post Section

# === config ===
config.root.secret.invalid = Invalid secret key.

# === user ===
user.alias.size = User alias length should be between {min} and {max}.
user.username.required = Username is required.
user.username.size = Username length should be between {min} and {max}.
user.username.exist = This username already exists.
user.password.required = Password is required.
user.password.size = Password length should be between {min} and {max}.
user.password.old.required = Old password is required.
user.password.old.size = Old password length should be between {min} and {max}.
user.password.notMatch = The new password does not match the old password.
user.usernameOrPassword.error = Incorrect username or password.
user.register.message.name = Welcome to join.
user.register.message.overview = We are delighted to have you on board. Registration time: [ {time} ]. Having your own account allows you to experience more personalized settings.
user.login.message.name = Welcome back.
user.login.message.overview = Welcome back! Login time: [ {time} ]. If you are not using a familiar location, please remember to log out of your account promptly.

# === role ===
role.name.required = Role name is required.
role.name.size = Role name length should be between {min} and {max}.
role.sort.value = Role sort value must be a positive number.

# === permission ===
permission.name.required = Permission name is required.
permission.name.size = Permission name length should be between {min} and {max}.
permission.sort.value = Permission sort value must be a positive number.

# === menu ===
menu.name.required = Menu name is required.
menu.name.size = Menu name length should be between {min} and {max}.
menu.link.required = Menu link is required.
menu.link.url = Menu link must start with HTTP or HTTPS.
menu.sort.value = Menu sort value must be a positive number.

# === submenu ===
submenu.name.required = Submenu name is required.
submenu.name.size = Submenu name length should be between {min} and {max}.
submenu.link.required = Submenu link is required.
submenu.link.url = Submenu link must start with HTTP or HTTPS.
submenu.sort.value = Submenu sort value must be a positive number.

# === action ===
action.name.required = Action name is required.
action.name.size = Action name length should be between {min} and {max}.
action.sort.value = Action sort value must be a positive number

# === validator ===
validator.url.invalid = The URL must start with either HTTP or HTTPS protocol.
